{"ast":null,"code":"var _jsxFileName = \"E:\\\\code repository\\\\MCDA\\\\react\\\\1\\\\react_assignmnet1\\\\src\\\\weather.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport cold from './pics/cold.png';\nimport mild from './pics/mild.png';\nimport sunny from './pics/sunny.png';\n\n// https://api.openweathermap.org/data/2.5/weather?lat=44.651070&lon=-63.582687&appid=7dc79bf17c5a776409177f7fb2f45178\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetWeather() {\n  _s();\n  const APIKey = '76e81f20536a80f8fcc25c183ec6ec0a';\n  const lat = 41.59;\n  const lon = 119.33;\n  const [data, setDate] = useState(null);\n  useEffect(() => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?units=metric&lat=${lat}&lon=${lon}&appid=${APIKey}`).then(response => response.json()).then(json => {\n      setTimeout(() => {\n        setDate(json);\n      });\n      console.log(1);\n    });\n  }, []);\n  var wea = 'Clouds';\n  var temC = 10;\n  var temF = 50;\n  var tem = -1;\n  metric = '℃'; // '℉'\n  console.log(2);\n  console.log(data);\n  if (data != null) {\n    wea = data.weather[0].main;\n    temC = data.main.temp;\n    temF = temC * 1.8 + 32;\n  }\n  var picshow = sunny;\n  if (wea == 'Clouds') {\n    picshow = mild;\n  } else if (wea == 'Rain' || wea == 'Snow') {\n    picshow = cold;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: picshow,\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-content\",\n      children: [\"Now weather in my hometwon is \", wea, \" with \", temC, \"\\u2103\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(GetWeather, \"8/1EHM90KPb59QEyr4vBGkocQ+k=\");\n_c = GetWeather;\nexport default GetWeather;\nvar _c;\n$RefreshReg$(_c, \"GetWeather\");","map":{"version":3,"names":["useEffect","useState","cold","mild","sunny","jsxDEV","_jsxDEV","GetWeather","_s","APIKey","lat","lon","data","setDate","fetch","then","response","json","setTimeout","console","log","wea","temC","temF","tem","metric","weather","main","temp","picshow","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["E:/code repository/MCDA/react/1/react_assignmnet1/src/weather.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport cold from './pics/cold.png'\r\nimport mild from './pics/mild.png'\r\nimport sunny from './pics/sunny.png'\r\n\r\n// https://api.openweathermap.org/data/2.5/weather?lat=44.651070&lon=-63.582687&appid=7dc79bf17c5a776409177f7fb2f45178\r\n\r\n\r\nfunction GetWeather(){\r\n    const APIKey = '76e81f20536a80f8fcc25c183ec6ec0a';\r\n    const lat = 41.59;\r\n    const lon = 119.33;\r\n    const [data, setDate] = useState(null);\r\n    useEffect(() => {\r\n         fetch(`https://api.openweathermap.org/data/2.5/weather?units=metric&lat=${lat}&lon=${lon}&appid=${APIKey}`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            setTimeout(()=>{setDate(json)})\r\n            console.log(1)\r\n        })\r\n    }, [])\r\n\r\n    var wea = 'Clouds'\r\n    var temC = 10\r\n    var temF = 50\r\n    var tem = -1\r\n    metric = '℃' // '℉'\r\n    console.log(2)\r\n    console.log(data)\r\n    if (data != null){\r\n        wea = data.weather[0].main\r\n        temC = data.main.temp\r\n        temF = temC * 1.8 + 32\r\n    }\r\n    \r\n    var picshow = sunny\r\n    if(wea == 'Clouds'){picshow = mild}\r\n    else if(wea == 'Rain' || wea == 'Snow' ) {picshow = cold}\r\n\r\n    return(\r\n        <div>\r\n            <img src={picshow} alt=\"logo\"/> \r\n            <div className='App-content'>Now weather in my hometwon is {wea} with {temC}℃</div>\r\n        </div>);\r\n    \r\n}\r\nexport default GetWeather;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,KAAK,MAAM,kBAAkB;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EACjB,MAAMC,MAAM,GAAG,kCAAkC;EACjD,MAAMC,GAAG,GAAG,KAAK;EACjB,MAAMC,GAAG,GAAG,MAAM;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtCD,SAAS,CAAC,MAAM;IACXc,KAAK,CAAE,oEAAmEJ,GAAI,QAAOC,GAAI,UAASF,MAAO,EAAC,CAAC,CAC3GM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAI;MACVC,UAAU,CAAC,MAAI;QAACL,OAAO,CAACI,IAAI,CAAC;MAAA,CAAC,CAAC;MAC/BE,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,GAAG,GAAG,QAAQ;EAClB,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZC,MAAM,GAAG,GAAG,EAAC;EACbN,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;EACdD,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EACjB,IAAIA,IAAI,IAAI,IAAI,EAAC;IACbS,GAAG,GAAGT,IAAI,CAACc,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;IAC1BL,IAAI,GAAGV,IAAI,CAACe,IAAI,CAACC,IAAI;IACrBL,IAAI,GAAGD,IAAI,GAAG,GAAG,GAAG,EAAE;EAC1B;EAEA,IAAIO,OAAO,GAAGzB,KAAK;EACnB,IAAGiB,GAAG,IAAI,QAAQ,EAAC;IAACQ,OAAO,GAAG1B,IAAI;EAAA,CAAC,MAC9B,IAAGkB,GAAG,IAAI,MAAM,IAAIA,GAAG,IAAI,MAAM,EAAG;IAACQ,OAAO,GAAG3B,IAAI;EAAA;EAExD,oBACII,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAKyB,GAAG,EAAEF,OAAQ;MAACG,GAAG,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/B9B,OAAA;MAAK+B,SAAS,EAAC,aAAa;MAAAP,QAAA,GAAC,gCAA8B,EAACT,GAAG,EAAC,QAAM,EAACC,IAAI,EAAC,QAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEd;AAAC5B,EAAA,CArCQD,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAsCnB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}